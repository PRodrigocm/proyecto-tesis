@startuml
!theme plain
title Secuencia: Consulta de Retiros Pendientes

participant "Apoderado\nTitular" as A
participant "Frontend\n(Next.js)" as F
participant "API Routes" as API
participant "Auth Middleware" as Auth
participant "Business Logic" as BL
participant "Prisma ORM" as P
participant "PostgreSQL" as DB

== Consulta de Retiros Pendientes ==

A -> F: Accede a retiros pendientes
F -> API: GET /api/apoderados/retiros/pendientes
API -> Auth: Verificar token JWT
Auth -> API: Token válido, rol APODERADO
API -> BL: Obtener retiros pendientes
BL -> P: Consultar retiros del apoderado
P -> DB: SELECT retiros WHERE apoderado_id = ? AND estado IN ('SOLICITADO', 'EN_REVISION')

alt Hay retiros pendientes
    DB -> P: Lista de retiros pendientes
    P -> BL: Retiros obtenidos
    BL -> API: Lista de retiros pendientes
    API -> F: Response 200 con retiros
    F -> A: Muestra lista de retiros pendientes
    
    loop Para cada retiro pendiente
        F -> A: Muestra detalles del retiro
        note right: - Estudiante\n- Fecha y hora solicitada\n- Motivo\n- Estado actual\n- Fecha de solicitud
    end
    
    A -> F: Selecciona retiro para gestionar
    F -> A: Muestra opciones (Aprobar/Rechazar/Ver detalles)
    
else No hay retiros pendientes
    DB -> P: Lista vacía
    P -> BL: No hay retiros pendientes
    BL -> API: Lista vacía
    API -> F: Response 200 con lista vacía
    F -> A: Muestra mensaje "No hay retiros pendientes"
end

alt Error en consulta
    DB -> P: Error en base de datos
    P -> BL: Error al consultar
    BL -> API: Error interno
    API -> F: Response 500 con error
    F -> A: Muestra mensaje de error
end

@enduml
