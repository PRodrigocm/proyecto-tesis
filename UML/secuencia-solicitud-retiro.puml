@startuml
!theme plain
title Secuencia: Solicitud de Retiro por Apoderado

participant "Apoderado" as A
participant "Frontend\n(Next.js)" as F
participant "API Routes" as API
participant "Auth Middleware" as Auth
participant "Business Logic" as BL
participant "Prisma ORM" as P
participant "PostgreSQL" as DB
participant "Notification\nService" as NS
participant "Email/SMS\nProvider" as ESP

== Proceso de Solicitud de Retiro ==

A -> F: Accede a formulario de retiro
F -> F: Renderiza componente SolicitarRetiro
A -> F: Completa formulario (estudiante, fecha, hora, motivo)
F -> API: POST /api/apoderados/retiros/solicitar
API -> Auth: Verificar token JWT
Auth -> API: Token válido, rol APODERADO
API -> BL: Validar datos del formulario
BL -> P: Verificar relación apoderado-estudiante
P -> DB: SELECT estudiante_apoderado WHERE...
DB -> P: Resultado de verificación
P -> BL: Relación válida
BL -> P: Verificar retiro existente para la fecha
P -> DB: SELECT retiros WHERE fecha = ? AND estudiante = ?
DB -> P: No existe retiro duplicado
P -> BL: Validación exitosa
BL -> P: Crear nuevo retiro
P -> DB: INSERT INTO retiros (...)
DB -> P: Retiro creado con ID
P -> BL: Retiro registrado exitosamente
BL -> NS: Enviar notificación a apoderado titular
NS -> P: Obtener datos del apoderado titular
P -> DB: SELECT apoderado WHERE es_titular = true
DB -> P: Datos del apoderado titular
P -> NS: Información del destinatario
NS -> ESP: Enviar email de notificación
ESP -> NS: Email enviado
NS -> BL: Notificación procesada
BL -> API: Retiro creado y notificación enviada
API -> F: Response 200 con datos del retiro
F -> A: Muestra confirmación de solicitud

@enduml
